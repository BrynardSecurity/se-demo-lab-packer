# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "os-iso-path" {
  type    = string
  default = "[nfsdatastore01] os/microsoft/server/2019/windows2019_noprompt.iso"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "vsphere-iso" "autogenerated_1" {
  CPUs                 = 2
  RAM                  = 4096
  RAM_reserve_all      = true
  cdrom_type           = "sata"
  cluster              = "${var.vsphere-cluster}"
  communicator         = "winrm"
  convert_to_template  = "true"
  datacenter           = "${var.vsphere-datacenter}"
  datastore            = "${var.vsphere-datastore}"
  disk_controller_type = "pvscsi"
  firmware             = "efi"
  floppy_files         = ["server_standard/autounattend.xml", "../drivers/pvscsi-win8/pvscsi.cat", "../drivers/pvscsi-win8/pvscsi.inf", "../drivers/pvscsi-win8/pvscsi.sys", "../drivers/pvscsi-win8/txtsetup.oem", "../scripts/2019/00-vmtools64.cmd", "../scripts/2019/01-initialize.ps1", "../scripts/2019/03-systemsettings.ps1", "../scripts/2019/95-enablerdp.ps1"]
  folder               = "${var.vsphere-folder}"
  guest_os_type        = "windows9Server64Guest"
  insecure_connection  = "${var.insecure-connection}"
  iso_paths            = ["${var.os-iso-path}", "[] /vmimages/tools-isoimages/windows.iso"]
  network_adapters {
    network      = "${var.vsphere-network}"
    network_card = "vmxnet3"
  }
  notes            = "${var.vm-notes}"
  password         = "${var.vsphere-password}"
  shutdown_command = "shutdown /f /s /t 10 /d p:4:1 /c \"Packer Complete\""
  storage {
    disk_size             = 61440
    disk_thin_provisioned = true
  }
  username       = "${var.vsphere-user}"
  vcenter_server = "${var.vsphere-server}"
  vm_name        = "windows2019.gold"
  winrm_password = "packer"
  winrm_timeout  = "15m"
  winrm_username = "Administrator"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  description = "Packer Windows Server 2019 build template file."

  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "powershell" {
    scripts = ["../scripts/2019/03-systemsettings.ps1", "../scripts/2019/95-enablerdp.ps1"]
  }

  provisioner "windows-restart" {
    restart_timeout = "30m"
  }

  provisioner "windows-update" {
    filters         = ["exclude:$_.Title -like '*Preview*'", "include:$true"]
    search_criteria = "IsInstalled=0"
  }

}
